from enum import Enum
import os
from telebot.async_telebot import AsyncTeleBot
import telebot

from storage.api import KeyValueStorage

KEY = os.getenv("TELEGRAM_API_KEY")
if not KEY:
    raise RuntimeError("No API key found")
bot = AsyncTeleBot(KEY)


class State(str, Enum):
    START = "start"
    NAME = "name"
    BIRTH_DATE = "birth_date"
    BIRTH_PLACE = "birth_place"


def create_mode_keyboard():
    web_app_link = telebot.types.WebAppInfo("https://cataas.com/cat")

    keyboard = telebot.types.InlineKeyboardMarkup()
    web_app_link = telebot.types.InlineKeyboardButton(
        "üì± –†–µ–∂–∏–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=web_app_link)
    start_button = telebot.types.InlineKeyboardButton(
        "üö© –ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ", callback_data="start")
    keyboard.add(web_app_link)
    keyboard.add(start_button)
    return keyboard


@bot.message_handler(commands=['start', 'help'])
async def start(message):
    KeyValueStorage.set(message.chat.id, State.START.value)
    await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø - MemoryCode –ë–æ—Ç, –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–º—è—Ç–∏. –ú–æ—è –∑–∞–¥–∞—á–∞ - —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–º—è—Ç–∏ –ª–µ–≥–∫–∏–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º –¥–ª—è –≤–∞—Å. –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –∑–∞ —Ä–∞–∑, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã. –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —ç—Ç–æ—Ç –≤–∞–∂–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤–º–µ—Å—Ç–µ?\n\n–¢–∞–∫ –∂–µ —è –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –≤–µ–±—Å—Ç—Ä–∞–Ω–∏—Ü—ã. –î–ª—è —ç—Ç–æ–≥ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üôÇ',
                           reply_markup=create_mode_keyboard())


@bot.message_handler(func=lambda message: not KeyValueStorage.get(str(message.chat.id)).value)
async def handle_message(message):
    await bot.send_message(
        message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É '/start' –∏–ª–∏ '/mode', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")


@bot.message_handler(func=lambda message: message.text == "–†–µ–∂–∏–º —á–∞—Ç-–±–æ—Ç–∞" and KeyValueStorage.get(str(message.chat.id)).value == State.START.value)
async def go_to_bot_mode(message):
    KeyValueStorage.set(message.chat.id, State.BOT.value)
    await bot.reply_to(message, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º —á–∞—Ç-–±–æ—Ç–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: \'/mode\'', reply_markup=None)


@bot.message_handler(func=lambda message: KeyValueStorage.get(str(message.chat.id)).value == State.START.value)
async def handle_random_message(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton(
        text="–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ", callback_data="start"))
    await bot.reply_to(message, "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == "start")
async def start_callback(call):
    KeyValueStorage.set(call.message.chat.id, State.NAME.value)
    await bot.send_message(call.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π—Ç–µ –∂–µ –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–º—è—Ç–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è —á–µ–ª–æ–≤–µ–∫–∞ (–§–ò–û):")


if __name__ == "__main__":
    import asyncio
    asyncio.run(bot.polling())
